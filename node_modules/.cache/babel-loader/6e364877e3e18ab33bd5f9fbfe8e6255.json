{"remainingRequest":"/Users/artemzausajlov/Projects/vue/Proxima-morda/proxima-morda/node_modules/babel-loader/lib/index.js!/Users/artemzausajlov/Projects/vue/Proxima-morda/proxima-morda/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/artemzausajlov/Projects/vue/Proxima-morda/proxima-morda/src/components/Control.component.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/artemzausajlov/Projects/vue/Proxima-morda/proxima-morda/src/components/Control.component.vue","mtime":1535989857000},{"path":"/Users/artemzausajlov/Projects/vue/Proxima-morda/proxima-morda/node_modules/cache-loader/dist/cjs.js","mtime":1535624526000},{"path":"/Users/artemzausajlov/Projects/vue/Proxima-morda/proxima-morda/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/artemzausajlov/Projects/vue/Proxima-morda/proxima-morda/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'Control',\n  data: function data() {\n    return {\n      ws: null,\n      connect: false,\n      clientPass: null\n    };\n  },\n  methods: {\n    click: function click() {\n      this.ws.send(JSON.stringify({\n        type: 'connect',\n        pass: this.clientPass\n      }));\n    },\n    SetCoords: function SetCoords() {\n      var self = this;\n      document.body.addEventListener('mousemove', function ($event) {\n        var arr = [event.clientX, event.clientY, document.body.clientWidth];\n        var req = {\n          type: 'coords',\n          coords: arr\n        };\n        self.ws.send(JSON.stringify(req));\n      });\n    }\n  },\n  mounted: function mounted() {\n    var self = this;\n    this.ws = new WebSocket('ws://localhost:8081');\n\n    this.ws.onmessage = function (message) {\n      var res = JSON.parse(message.data);\n      var type = res[0];\n\n      switch (type) {\n        case 'success':\n          self.SetCoords();\n          break;\n      }\n    };\n  }\n};",{"version":3,"sources":["Control.component.vue"],"names":[],"mappings":";;;;;;;AAQA,eAAA;AACA,QAAA,SADA;AAEA,QAAA,gBAAA;AACA,WAAA;AACA,UAAA,IADA;AAEA,eAAA,KAFA;AAGA,kBAAA;AAHA,KAAA;AAKA,GARA;AASA,WAAA;AACA,WAAA,iBAAA;AACA,WAAA,EAAA,CAAA,IAAA,CAAA,KAAA,SAAA,CAAA;AAAA,cAAA,SAAA;AAAA,cAAA,KAAA;AAAA,OAAA,CAAA;AACA,KAHA;AAIA,eAAA,qBAAA;AACA,UAAA,OAAA,IAAA;AACA,eAAA,IAAA,CAAA,gBAAA,CAAA,WAAA,EAAA,UAAA,MAAA,EAAA;AACA,YAAA,MAAA,CAAA,MAAA,OAAA,EAAA,MAAA,OAAA,EAAA,SAAA,IAAA,CAAA,WAAA,CAAA;AACA,YAAA,MAAA;AAAA,gBAAA,QAAA;AAAA,kBAAA;AAAA,SAAA;AACA,aAAA,EAAA,CAAA,IAAA,CAAA,KAAA,SAAA,CAAA,GAAA,CAAA;AACA,OAJA;AAKA;AAXA,GATA;AAsBA,WAAA,mBAAA;AACA,QAAA,OAAA,IAAA;AACA,SAAA,EAAA,GAAA,IAAA,SAAA,CAAA,qBAAA,CAAA;;AACA,SAAA,EAAA,CAAA,SAAA,GAAA,UAAA,OAAA,EAAA;AACA,UAAA,MAAA,KAAA,KAAA,CAAA,QAAA,IAAA,CAAA;AACA,UAAA,OAAA,IAAA,CAAA,CAAA;;AACA,cAAA,IAAA;AACA,aAAA,SAAA;AAAA,eAAA,SAAA;AAAA;AADA;AAGA,KANA;AAOA;AAhCA,CAAA","sourcesContent":["<template>\n    <div class=\"control\">\n      <h4 v-if=\"connect\" style=\"color: green\">Соединение установлено</h4>\n      <input v-model=\"clientPass\"/>\n      <button @click=\"click\">отправить пароль</button>\n    </div>\n</template>\n<script>\nexport default {\n    name :'Control',\n    data: function(){\n        return {\n            ws : null,\n            connect : false,\n            clientPass : null\n        }\n    },\n    methods : {\n        click: function() {\n            this.ws.send(JSON.stringify({type : 'connect', pass : this.clientPass}))\n        },\n        SetCoords : function() {\n            const self = this;\n            document.body.addEventListener('mousemove', function($event){\n                let arr= [event.clientX, event.clientY, document.body.clientWidth];\n                let req = { type : 'coords', coords : arr }\n                    self.ws.send(JSON.stringify(req))\n            })\n        }\n    },\n    mounted : function() {\n        const self = this;\n        this.ws = new WebSocket('ws://localhost:8081');\n        this.ws.onmessage = function( message ) {\n            let res = JSON.parse(message.data);\n            let type = res[0];\n            switch ( type ) {\n                case 'success' : self.SetCoords() ;break;\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n    .control {\n        position: absolute;\n        width: 100%;\n        height: 300%;\n        top: 0;\n        left: 0;\n    }\n</style>\n\n\n"],"sourceRoot":"src/components"}]}